from pyimager import *
def Sort_y(sub_li): return(sorted(sub_li, key=lambda y: y[0][1]))
def Sort_x(sub_li): return(sorted(sub_li, key=lambda x: x[0][0]))
l = [[[103.16145833333333, 309.3333333333333], [106.71875, 312.88888888888886]], [[99.60416666666666, 309.3333333333333], [103.16145833333333, 312.88888888888886]], [[96.046875, 309.3333333333333], [99.60416666666666, 312.88888888888886]], [[92.48958333333333, 309.3333333333333], [96.046875, 312.88888888888886]], [[113.83333333333333, 312.88888888888886], [117.390625, 316.4444444444444]], [[110.27604166666666, 312.88888888888886], [113.83333333333333, 316.4444444444444]], [[106.71875, 312.88888888888886], [110.27604166666666, 316.4444444444444]], [[103.16145833333333, 312.88888888888886], [106.71875, 316.4444444444444]], [[99.60416666666666, 312.88888888888886], [103.16145833333333, 316.4444444444444]], [[96.046875, 312.88888888888886], [99.60416666666666, 316.4444444444444]], [[92.48958333333333, 312.88888888888886], [96.046875, 316.4444444444444]], [[88.93229166666666, 312.88888888888886], [92.48958333333333, 316.4444444444444]], [[85.375, 312.88888888888886], [88.93229166666666, 316.4444444444444]], [[81.81770833333333, 312.88888888888886], [85.375, 316.4444444444444]], [[117.390625, 316.4444444444444], [120.94791666666666, 320.0]], [[117.390625, 320.0], [120.94791666666666, 323.55555555555554]], [[117.390625, 323.55555555555554], [120.94791666666666, 327.1111111111111]], [[113.83333333333333, 316.4444444444444], [117.390625, 320.0]], [[113.83333333333333, 320.0], [117.390625, 323.55555555555554]], [[113.83333333333333, 323.55555555555554], [117.390625, 327.1111111111111]], [[110.27604166666666, 316.4444444444444], [113.83333333333333, 320.0]], [[110.27604166666666, 320.0], [113.83333333333333, 323.55555555555554]], [[110.27604166666666, 323.55555555555554], [113.83333333333333, 327.1111111111111]], [[106.71875, 316.4444444444444], [110.27604166666666, 320.0]], [[106.71875, 323.55555555555554], [110.27604166666666, 327.1111111111111]], [[103.16145833333333, 316.4444444444444], [106.71875, 320.0]], [[103.16145833333333, 323.55555555555554], [106.71875, 327.1111111111111]], [[99.60416666666666, 316.4444444444444], [103.16145833333333, 320.0]], [[99.60416666666666, 320.0], [103.16145833333333, 323.55555555555554]], [[99.60416666666666, 323.55555555555554], [103.16145833333333, 327.1111111111111]], [[96.046875, 316.4444444444444], [99.60416666666666, 320.0]], [[96.046875, 320.0], [99.60416666666666, 323.55555555555554]], [[96.046875, 323.55555555555554], [99.60416666666666, 327.1111111111111]], [[92.48958333333333, 316.4444444444444], [96.046875, 320.0]], [[92.48958333333333, 323.55555555555554], [96.046875, 327.1111111111111]], [[88.93229166666666, 316.4444444444444], [92.48958333333333, 320.0]], [[88.93229166666666, 323.55555555555554], [92.48958333333333, 327.1111111111111]], [[85.375, 316.4444444444444], [88.93229166666666, 320.0]], [[85.375, 320.0], [88.93229166666666, 323.55555555555554]], [[85.375, 323.55555555555554], [88.93229166666666, 327.1111111111111]], [[81.81770833333333, 316.4444444444444], [85.375, 320.0]], [[81.81770833333333, 320.0], [85.375, 323.55555555555554]], [[81.81770833333333, 323.55555555555554], [85.375, 327.1111111111111]], [[78.26041666666666, 316.4444444444444], [81.81770833333333, 320.0]], [[78.26041666666666, 320.0], [81.81770833333333, 323.55555555555554]], [[78.26041666666666, 323.55555555555554], [81.81770833333333, 327.1111111111111]], [[106.71875, 327.1111111111111], [110.27604166666666, 330.66666666666663]], [[103.16145833333333, 327.1111111111111], [106.71875, 330.66666666666663]], [[92.48958333333333, 327.1111111111111], [96.046875, 330.66666666666663]], [[88.93229166666666, 327.1111111111111], [92.48958333333333, 330.66666666666663]], [[99.60416666666666, 330.66666666666663], [103.16145833333333, 334.22222222222223]], [[96.046875, 330.66666666666663], [99.60416666666666, 334.22222222222223]], [[110.27604166666666, 330.66666666666663], [113.83333333333333, 334.22222222222223]], [[85.375, 330.66666666666663], [88.93229166666666, 334.22222222222223]], [[110.27604166666666, 327.1111111111111], [113.83333333333333, 330.66666666666663]], [[85.375, 327.1111111111111], [88.93229166666666, 330.66666666666663]], [[113.83333333333333, 330.66666666666663], [117.390625, 334.22222222222223]], [[81.81770833333333, 330.66666666666663], [85.375, 334.22222222222223]], [[110.27604166666666, 334.22222222222223], [113.83333333333333, 337.77777777777777]], [[106.71875, 334.22222222222223], [110.27604166666666, 337.77777777777777]], [[85.375, 334.22222222222223], [88.93229166666666, 337.77777777777777]], [[88.93229166666666, 334.22222222222223], [92.48958333333333, 337.77777777777777]]]
# l = [[[103.16145833333333, 309.3333333333333], [106.71875, 312.88888888888886]], [[99.60416666666666, 309.3333333333333], [103.16145833333333, 312.88888888888886]], [[96.046875, 309.3333333333333], [99.60416666666666, 312.88888888888886]], [[92.48958333333333, 309.3333333333333], [96.046875, 312.88888888888886]], [[113.83333333333333, 312.88888888888886], [117.390625, 316.4444444444444]], [[110.27604166666666, 312.88888888888886], [113.83333333333333, 316.4444444444444]], [[106.71875, 312.88888888888886], [110.27604166666666, 316.4444444444444]], [[103.16145833333333, 312.88888888888886], [106.71875, 316.4444444444444]], [[99.60416666666666, 312.88888888888886], [103.16145833333333, 316.4444444444444]], [[96.046875, 312.88888888888886], [99.60416666666666, 316.4444444444444]], [[92.48958333333333, 312.88888888888886], [96.046875, 316.4444444444444]], [[88.93229166666666, 312.88888888888886], [92.48958333333333, 316.4444444444444]], [[85.375, 312.88888888888886], [88.93229166666666, 316.4444444444444]], [[81.81770833333333, 312.88888888888886], [85.375, 316.4444444444444]], [[117.390625, 316.4444444444444], [120.94791666666666, 320.0]], [[117.390625, 320.0], [120.94791666666666, 323.55555555555554]], [[117.390625, 323.55555555555554], [120.94791666666666, 327.1111111111111]], [[113.83333333333333, 316.4444444444444], [117.390625, 320.0]], [[113.83333333333333, 320.0], [117.390625, 323.55555555555554]], [[113.83333333333333, 323.55555555555554], [117.390625, 327.1111111111111]], [[110.27604166666666, 316.4444444444444], [113.83333333333333, 320.0]], [[110.27604166666666, 320.0], [113.83333333333333, 323.55555555555554]], [[110.27604166666666, 323.55555555555554], [113.83333333333333, 327.1111111111111]], [[106.71875, 316.4444444444444], [110.27604166666666, 320.0]], [[106.71875, 323.55555555555554], [110.27604166666666, 327.1111111111111]], [[103.16145833333333, 316.4444444444444], [106.71875, 320.0]], [[103.16145833333333, 323.55555555555554], [106.71875, 327.1111111111111]], [[99.60416666666666, 316.4444444444444], [103.16145833333333, 320.0]], [[99.60416666666666, 320.0], [103.16145833333333, 323.55555555555554]], [[99.60416666666666, 323.55555555555554], [103.16145833333333, 327.1111111111111]], [[96.046875, 316.4444444444444], [99.60416666666666, 320.0]], [[96.046875, 320.0], [99.60416666666666, 323.55555555555554]], [[96.046875, 323.55555555555554], [99.60416666666666, 327.1111111111111]], [[92.48958333333333, 316.4444444444444], [96.046875, 320.0]], [[92.48958333333333, 323.55555555555554], [96.046875, 327.1111111111111]], [[88.93229166666666, 316.4444444444444], [92.48958333333333, 320.0]], [[88.93229166666666, 323.55555555555554], [92.48958333333333, 327.1111111111111]], [[85.375, 316.4444444444444], [88.93229166666666, 320.0]], [[85.375, 320.0], [88.93229166666666, 323.55555555555554]], [[85.375, 323.55555555555554], [88.93229166666666, 327.1111111111111]], [[81.81770833333333, 316.4444444444444], [85.375, 320.0]], [[81.81770833333333, 320.0], [85.375, 323.55555555555554]], [[81.81770833333333, 323.55555555555554], [85.375, 327.1111111111111]], [[78.26041666666666, 316.4444444444444], [81.81770833333333, 320.0]], [[78.26041666666666, 320.0], [81.81770833333333, 323.55555555555554]], [[78.26041666666666, 323.55555555555554], [81.81770833333333, 327.1111111111111]], [[106.71875, 327.1111111111111], [110.27604166666666, 330.66666666666663]], [[103.16145833333333, 327.1111111111111], [106.71875, 330.66666666666663]], [[92.48958333333333, 327.1111111111111], [96.046875, 330.66666666666663]], [[88.93229166666666, 327.1111111111111], [92.48958333333333, 330.66666666666663]], [[99.60416666666666, 330.66666666666663], [103.16145833333333, 334.22222222222223]], [[96.046875, 330.66666666666663], [99.60416666666666, 334.22222222222223]], [[110.27604166666666, 330.66666666666663], [113.83333333333333, 334.22222222222223]], [[85.375, 330.66666666666663], [88.93229166666666, 334.22222222222223]], [[117.390625, 334.22222222222223], [120.94791666666666, 337.77777777777777]], [[113.83333333333333, 334.22222222222223], [117.390625, 337.77777777777777]], [[78.26041666666666, 334.22222222222223], [81.81770833333333, 337.77777777777777]], [[81.81770833333333, 334.22222222222223], [85.375, 337.77777777777777]], [[106.71875, 330.66666666666663], [110.27604166666666, 334.22222222222223]], [[88.93229166666666, 330.66666666666663], [92.48958333333333, 334.22222222222223]]]
l2 = Sort_y(Sort_x(l))
a = [min(a[0] for a, _ in l), min(a[1] for a, _ in l)]

m = 10
img = new_img([max(diff(a[0], b[0]) for _, b in l)*m, max(diff(a[1], b[1]) for _, b in l)*m], COL.black, "Test")
print(img.size())

for i in l2:
    p1, p2 = i
    p1, p2 = [(p1[0]-a[0])*m, (p1[1]-a[1])*m], [(p2[0]-a[0])*m, (p2[1]-a[1])*m]
    img.rectangle(p1, p2, COL.red, 0)
    img.rectangle(p1, p2, COL.white, 1)
    print(l.index(i), [round(v) for v in i[0]])
    img.write_centered(l.index(i), ct_sg(p1, p2), COL.lime, 1, 1, FONT_HERSHEY_SIMPLEX)
img.build()
while img.is_opened(): img.show()